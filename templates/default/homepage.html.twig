{% extends "base.html.twig" %}

{% block body %}
    <div id="container">
        <div id="heading" class="invisible">
            <div id="menu-button" class="invisible">
                <div class="bar1"></div>
                <div class="bar2"></div>
                <div class="bar3"></div>
            </div>
            <div id="logo">
                LOGO
            </div>
            <div id="header-spacing"></div>
            <div id="contact-bar">
                contact: 111-222-333  &#9400; 2018 Marcin Krawczyk. All Rights Reserved.
            </div>
            <div style="clear: both;"></div>
        </div>
        <div id="menu" class="invisible">
        </div>
        <div id="content" class="invisible">
            <div id="photos">
                <div id="grid-container"></div>
            </div>
         </div>
         <div style="clear: both;"></div>
     </div>
{% endblock %}

{% block javascripts %}
    <script src="{{ asset('build/manifest.js') }}"></script>
    <script src="{{ asset('build/vendor.js') }}"></script>
    
    {# common scripts and css #}
    <script src="{{ asset('build/app.js') }}"></script>
    
    {# page specific scripts #}
    <script src="{{ asset('build/homepage.js') }}"></script>
    
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            
            let menuButton = document.getElementById("menu-button");  
            let gridContainer = document.getElementById("grid-container");
            
            // initial configuration
            function init() {
                
                let heading = document.getElementById("heading");
                let menuButton = document.getElementById("menu-button");             
                let logo = document.getElementById("logo");
                let headerSpacing = document.getElementById("header-spacing");
                let contactBar = document.getElementById("contact-bar");
                let menu = document.getElementById("menu");
                let content = document.getElementById("content");
                let gridContainer = document.getElementById("grid-container");
                let windowWidth = window.innerWidth;
                
                if (windowWidth > 740) {
                    
                    // header
                    heading.classList.add("heading-normal");
                    heading.classList.remove("invisible");
                    
                    logo.classList.add("col-2");
                    headerSpacing.classList.add("col-1");
                    contactBar.classList.add("col-9");
                    
                    // content
                    menu.classList.add("col-3");
                    menu.classList.add("menu-config");
                    menu.classList.remove("invisible");
                    
                    pasteMenuContent(menu);
                    
                    content.classList.add("col-9");
                    content.classList.remove("invisible");
                    
                    showPhotosBySessionName('Cats');
                    setTimeout(function(){
                        switchOrAddGridClasses(gridContainer, "grid-container-3", "grid-item-3");
                    }, 300);
                    
                } else {
                    
                    // header
                    heading.classList.add("heading-small");
                    heading.classList.remove("invisible");
                    
                    menuButton.classList.add("col-1");
                    menuButton.classList.remove("invisible");
                    logo.classList.add("col-2");
                    headerSpacing.classList.add("col-9");
                    contactBar.classList.add("invisible");
                    
                    // content
                    menu.classList.add("col-0");
                    
                    pasteMenuContent(menu);
                    
                    content.classList.add("col-12");
                    content.classList.remove("invisible");
                    
                    showPhotosBySessionName('Cats');
                    setTimeout(function(){
                        switchOrAddGridClasses(gridContainer, "grid-container-2", "grid-item-2");
                    }, 300);
                }
            }
            init();

            // on resize browser window
            let onresize = function() {
                
                let heading = document.getElementById("heading");
                
                let headerSpacing = document.getElementById("header-spacing");
                let contactBar = document.getElementById("contact-bar");
                let content = document.getElementById("content");
                let gridContainer = document.getElementById("grid-container");
                let windowWidth = window.innerWidth;
                let menu = document.getElementById("menu");
                let menuButton = document.getElementById("menu-button");
                let menuPop = document.getElementById("menu-pop");

                if (windowWidth > 740) {
                    
                    if (menuPop !== null) {

                        menuPop.remove();
                        content.classList.remove("invisible");
                        
                        menuButton.classList.remove("change");
                    }
                    
                    // header
                    if (String(heading.className.match(/heading-small/g)) === "heading-small") {
                        
                        heading.classList.remove("heading-small");
                        heading.classList.add("heading-normal");
                    }
                    
                    if (String(menuButton.className.match(/invisible/g)) !== "invisible") {
                        
                        menuButton.classList.add("invisible");
                        menuButton.classList.remove("col-1");
                    }
                    
                    if (String(headerSpacing.className.match(/col-9/g)) === "col-9") {
                        
                        headerSpacing.classList.remove("col-9");
                        headerSpacing.classList.add("col-1");
                    }
                    
                    if (String(contactBar.className.match(/invisible/g)) === "invisible") {
                        
                        contactBar.classList.remove("invisible");
                        contactBar.classList.add("col-9");
                    }
                      
                    // content
                    if (String(menu.className.match(/col-0/g)) === "col-0") {
                        
                        menu.classList.remove("col-0");
                        menu.classList.remove("invisible");
                    }
                    
                    if (String(menu.className.match(/col-12/g)) === "col-12") {
                        
                        menu.classList.remove("col-12");
                    }
                    
                    if (String(menu.className.match(/col-3/g)) !== "col-3") {
                        
                        menu.classList.add("col-3");
                    }
                    
                    if (String(menu.className.match(/menu-config/g)) !== "menu-config") {
                        
                        menu.classList.add("menu-config");
                    }
                    
                    if (String(content.className.match(/col-0/g)) === "col-0") {
                        
                        content.classList.remove("col-0");
                        content.classList.remove("invisible");
                    }
                    
                    if (String(content.className.match(/col-12/g)) === "col-12") {
                        
                        content.classList.remove("col-12");
                    }
                    
                    if (String(content.className.match(/col-9/g)) !== "col-9") {
                        
                        content.classList.add("col-9");
                    }
                    
                    if (String(gridContainer.className.match(/grid-container-2/g)) === "grid-container-2") {
                        
                        switchOrAddGridClasses(gridContainer, "grid-container-3", "grid-item-3");
                    }
                    
                } else {
                    
                    //header
                    if (String(heading.className.match(/heading-normal/g)) === "heading-normal") {
                        
                        heading.classList.remove("heading-normal");
                        heading.classList.add("heading-small");
                    }
                    
                    if (String(menuButton.className.match(/invisible/g)) === "invisible") {
                        
                        menuButton.classList.remove("invisible");
                        menuButton.classList.add("col-1");
                    }
                    
                    if (String(headerSpacing.className.match(/col-1/g)) === "col-1") {
                        
                        headerSpacing.classList.remove("col-1");
                        headerSpacing.classList.add("col-9");
                    }
                    
                    if (String(contactBar.className.match(/col-9/g)) === "col-9") {
                        
                        contactBar.classList.remove("col-9");
                        contactBar.classList.add("col-0");
                        contactBar.classList.add("invisible");
                    }
                    
                    // content
                    if (String(menu.className.match(/col-3/g)) === "col-3") {
                        
                        menu.classList.remove("col-3");
                        menu.classList.remove("menu-config");
                        menu.classList.add("col-0");
                        menu.classList.add("invisible");

                        content.classList.remove("col-9");
                        content.classList.add("col-12");
                    }
                    
                    if (String(gridContainer.className.match(/grid-container-3/g)) === "grid-container-3") {
                        
                        switchOrAddGridClasses(gridContainer, "grid-container-2", "grid-item-2");
                    }
                }
            };
            window.addEventListener("resize", onresize);
            
            // click menu button event listener
            menuButton.addEventListener("click", function(){

                let container = document.getElementById("container");
                let content = document.getElementById("content");
                let menuPop = document.getElementById("menu-pop");
                
                if (menuPop === null) {
                    
                    menuButton.classList.add("change");

                    let menuPop = document.createElement('div');
                    menuPop.setAttribute('id', 'menu-pop');
                    menuPop.classList.add("m-open");
                    pasteMenuContent(menuPop);

                    container.append(menuPop);

                    content.classList.add("invisible");
                    
                } else {
                    
                    menuButton.classList.remove("change");

                    content.classList.remove("invisible");
                    menuPop.remove();
                }
            });
            
            function switchOrAddGridClasses(anchor, gridContainerClassName, gridItemClassName) {
                
                // check if anchor has any grid container class
                // if not, add passed one
                // if has already gridContainerClass, remove old one and switch to passed one
                if (anchor.classList.length === 0) {

                    anchor.classList.add(gridContainerClassName);

                } else if (String(anchor.className.match(/grid-container-3/g)) === "grid-container-3") {

                    anchor.classList.remove("grid-container-3");
                    anchor.classList.add(gridContainerClassName);

                } else if (String(anchor.className.match(/grid-container-2/g)) === "grid-container-2") {

                    anchor.classList.remove("grid-container-2");
                    anchor.classList.add(gridContainerClassName);
                }

                // transform variable with anchor's children NodeList elements to Array
                let children = Array.from(anchor.childNodes);

                children.forEach(function(item){

                    // check if child item has any grid item class
                    // if not, add passed one
                    // if has already gridItemClass, remove old one and switch to passed one
                    if (String(item.className.match(/invisible/g)) === "invisible") {

                        item.classList.add(gridItemClassName);

                    } else if (String(item.className.match(/grid-item-3/g)) === "grid-item-3") {

                        item.classList.remove("grid-item-3");
                        item.classList.add(gridItemClassName);

                    } else if (String(item.className.match(/grid-item-2/g)) === "grid-item-2") {

                        item.classList.remove("grid-item-2");
                        item.classList.add(gridItemClassName);
                    }

                    item.classList.remove("invisible");
                });
            }
                                
            function createAndPasteMenuList(params, anchor) {
                
                let menuList = document.createElement('div');
                menuList.setAttribute('id', 'menu-list');
                    
                let sessionHeader = document.createElement('p');
                sessionHeader.innerHTML = "Sessions";
                
                menuList.appendChild(sessionHeader);
                
                let sessionUnorderedList = document.createElement('ul');
                sessionUnorderedList.setAttribute('id', 'sessions');
                
                for (var i = 0; i < params.length; i++) {
                    
                    let sessionListElement = document.createElement('li');
                    sessionListElement.innerHTML = params[i];
                    
                    sessionUnorderedList.appendChild(sessionListElement);
                }
                
                menuList.appendChild(sessionUnorderedList);
                
                let about = document.createElement('p');
                // add link to redirect
                about.innerHTML = "About";
                
                menuList.appendChild(about);
                
                let contact = document.createElement('p');
                // add link to redirect
                contact.innerHTML = "Contact";
                
                menuList.appendChild(contact);
                
                // add social medias
                
                anchor.append(menuList);
            }
            
            async function getMenuList(url, anchor) {
                const response = await fetch(url);
                const json = await response.json();
                const listOfSessions = json.map(session => session.name);

                createAndPasteMenuList(listOfSessions, anchor);
            }
            
            function pasteMenuContent(anchor) {
                
                // TO CHANGE AFTER DEPLOY
                let url = "http://localhost:8000/get-sessions";
            
                getMenuList(url, anchor);
            }
                    
            function createAndPasteSessionPhotos(params) {
                
                for (var i = 0; i < params.length; i++) {
                    
                    let gridItemElement = document.createElement('div');
                    gridItemElement.classList.add("invisible");
                    
                    let imageElement = document.createElement('img');
                    imageElement.src = '/uploads/photographs/' + params[i];
                    
                    gridItemElement.appendChild(imageElement);
                    gridContainer.appendChild(gridItemElement);
                }
            }              
            
            async function getPhotos(sessionName) {
                
                let url = "http://localhost:8000/get-photos";
                
                const data = {
                    sessionName: sessionName
                };

                const options = {
                    method: 'POST',
                    body: JSON.stringify(data),
                    headers: {
                        'Content-Type': 'application/json'
                    }
                };

                const response = await fetch(url, options);
                const photosNames = await response.json();
                
                createAndPasteSessionPhotos(photosNames);
            }
            
            function showPhotosBySessionName(sessionName) {
            
                if (gridContainer.hasChildNodes()) {
                    
                    while (gridContainer.firstChild) {
                        
                        gridContainer.removeChild(gridContainer.firstChild);
                    }
                }

                getPhotos(sessionName);
            }
            
            // click on specific menu li element event listener
            document.addEventListener('click', function(event) {

                if(event.target.nodeName === "LI" && event.target.parentElement.id === "sessions") {
                    
                    // TO CHANGE AFTER DEPLOY
                    let url = "http://localhost:8000/get-photos";
                    
                    let sessionName = event.target.innerHTML;
                    
                    
                    
                    
                    // todo: finish changing sessions
                    
                    // in a future showPhotosBySessionName()
                    getPhotos(url, sessionName);
                    
                    
                    
                    
                    
                }
            });
        });
    </script>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('build/homepage_style.css') }}"/>
    
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        img {
            width: 100%;
            height: 100%;
        }
        
        #container {

        
        }
        
        #heading {
            
        }
        
        #menu-button {
            display: inline-block;
            cursor: pointer;
            
            padding: 0px;
            float: left;
        }
        
        .bar1, .bar2, .bar3 {
            width: 35px;
            height: 5px;
            background-color: #333;
            margin: 6px 0;
            transition: 0.4s;
        }
        
        .change .bar1 {
            -webkit-transform: rotate(-45deg) translate(-9px, 6px);
            transform: rotate(-45deg) translate(-9px, 6px);
        }

        .change .bar2 {opacity: 0;}

        .change .bar3 {
            -webkit-transform: rotate(45deg) translate(-8px, -8px);
            transform: rotate(45deg) translate(-8px, -8px);
        }
        
        #logo {
            padding: 0px;
            height: 60px;
            background-color: green;
            float: left;
        }
        
        #header-spacing {
            background-color: pink;
            float: left;
        }
        
        #contact-bar {
            background-color: cornflowerblue;
            text-align: right;
            float: left;
        }
        
        .heading-normal {
            height: 110px;
        }
        
        .heading-small {
            height: 60px;
        }
        
        #content {
            background-color: yellow;
            height: auto;
            float: left;
        }
    
        #menu {
            float: left;
        }
        
        .menu-config {
{#            why this shit does not work??#}
            padding: 60px 30px;
            
            height: 800px;
            font-size: 16px;
            line-height: 25px;
        }
        
        #menu-list > p {
            font-weight: bold;
        }
        
        ul#sessions > li {
            cursor: pointer;
        }
        
        #sessions {
            padding-left: 13px;
            list-style-type: none;
        }
        
        .m-open {
            position: absolute;
            background-color: purple;
            padding: 60px 30px;
            z-index: 1;
            width: 100%;
            height: 1000px;
            left: 0px;
            top: 60px;
        }
        
        #photos {
            
        }
        
        .grid-container-2 {
            display: grid;
            grid-template-columns: auto auto;
            grid-gap: 2px;
        }
        
        .grid-item-2 {
            background-color: rgba(255, 255, 255, 0.8);
            border: 1px solid rgba(0, 0, 0, 0.8);
            text-align: center;
        }
        
        .grid-container-3 {
            display: grid;
            grid-template-columns: auto auto auto;
            grid-gap: 5px;
        }
        
        .grid-item-3 {
            background-color: rgba(255, 255, 255, 0.8);
            border: 1px solid rgba(0, 0, 0, 0.8);
            text-align: center;
        }
        
        .invisible {
            visibility: hidden;
            height: 0px;
        }
        
        .col-0 {
            width: 0%;
        }
        
        .col-1 {
            width: 8.33%;
            padding: 15px;
        }
        
        .col-2 {
            width: 16.66%;
            padding: 15px;
        }
        
        .col-3 {
            width: 25%;
            padding: 15px;
        }
        
        .col-4 {
            width: 33.33%;
            padding: 15px;
        }
        
        .col-5 {
            width: 41.66%;
            padding: 15px;
        }
        
        .col-6 {
            width: 50%;
            padding: 15px;
        }
        
        .col-7 {
            width: 58.33%;
            padding: 15px;
        }
        
        .col-8 {
            width: 66.66%;
            padding: 15px;
        }
        
        .col-9 {
            width: 75%;
            padding: 15px;
        }
        
        .col-10 {
            width: 83.33%;
            padding: 15px;
        }
        
        .col-11 {
            width: 91.66%;
            padding: 15px;
        }
        
        .col-12 {
            width: 100%;
            padding: 15px;
        }
    </style>
{% endblock %}